[
  {
    "objectID": "primers.html",
    "href": "primers.html",
    "title": "Primers on qualitative data and analysis",
    "section": "",
    "text": "If you have never had formal masters-level training in qualitative enquiry, we recommend you follow some introductory material before you atten the NVivo workshops. This will help you get the most out of the day."
  },
  {
    "objectID": "primers.html#what-is-qualitative-enquiry-and-data",
    "href": "primers.html#what-is-qualitative-enquiry-and-data",
    "title": "Primers on qualitative data and analysis",
    "section": "What is qualitative enquiry and data?",
    "text": "What is qualitative enquiry and data?\nEngage with one or all of the following:\n\nThe Discipline and Practice of Qualitative Research which is Chapter 1 in Denzin and Lincoln, eds. (2018) The SAGE Handbook of Qualitative Research. 5th ed. London: SAGE Publications.\nIntroduction to qualitative research methods - Part 1 by Bhangu, Provost, and Caduff (2023) in Perspectives in Clinical Research 14(1) pp.39-42\nQualitative research the basics YouTube video by Degree Doctor (Dr Elizabeth Yardley)"
  },
  {
    "objectID": "primers.html#what-is-thematic-analysis",
    "href": "primers.html#what-is-thematic-analysis",
    "title": "Primers on qualitative data and analysis",
    "section": "What is thematic analysis?",
    "text": "What is thematic analysis?\nThematic analysis is a commonly used method within qualitative analysis, suitable for using with software like NVivo.\nPapers:\n\nBraun, Virginia, and Victoria Clarke (2006) ‘Using Thematic Analysis in Psychology’. Qualitative Research in Psychology 3(2):77–101. doi: 10.1191/1478088706qp063oa.\nBraun, Virginia, and Victoria Clarke (2019) ‘Reflecting on Reflexive Thematic Analysis’. Qualitative Research in Sport, Exercise and Health 11(4):589–97. doi: 10.1080/2159676X.2019.1628806.\nByrne, David. (2022) ‘A Worked Example of Braun and Clarke’s Approach to Reflexive Thematic Analysis’. Quality & Quantity 56(3):1391–1412. doi: 10.1007/s11135-021-01182-y.\nKiger, Michelle E., and Lara Varpio. (2020) ‘Thematic Analysis of Qualitative Data: AMEE Guide No. 131’. Medical Teacher 42(8):846–54. doi: 10.1080/0142159X.2020.1755030.\n\nYouTube:\n\nThematic analysis in qualitative research by Degree Doctor (Dr Elizabeth Yardley)"
  },
  {
    "objectID": "primers.html#what-is-coding",
    "href": "primers.html#what-is-coding",
    "title": "Primers on qualitative data and analysis",
    "section": "What is coding?",
    "text": "What is coding?\n\nAn Introduction to Codes and Coding which is Chapter 1 in Saldaña (2013) The Coding Manual for Qualitative Researchers. 2nd ed. London: Sage Publications Ltd."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "These online NVivo Guidance and Workshop pages for the Scottish Graduate School of Social Science are produced by:\n\nDr Kathryn Fredricks\nDr Katherine Keenan\nAlasdair B R Stewart\n\nWith additional material from:\n\nDr Rachel Shanks\n\nThese pages are ‘living documents’ and will incrementally be updated over time. See the Callout below for more information.\n\n\n\n\n\n\n‘Living Documents’\n\n\n\nThese pages are ‘living documents’, they will continually and iteratively be updated over time.\nI cannot promise additional content will be added within any specific period of time, but I will be taking note of frequently asked questions, different use cases, and any issues encountered. These will be used to update and add to the existing content.\nSimilarly, following any of the sessions – or if you were unable to attend the in-person workshops and are following along online - please feel free to email any questions: alasdair.stewart@glasgow.ac.uk.\nNote - I take absolutely no offense if your question is due to any of the materials being unclear! In all my time teaching, the most useful feedback I have received has been from students pointing out something that was unclear to them or raised further questions.\nI am also dyslexic, so writing is the bane of my existence. Any help identifying spelling mistakes and grammatical errors will earn my eternal gratitude."
  },
  {
    "objectID": "quickexample.html",
    "href": "quickexample.html",
    "title": "Layering Structure",
    "section": "",
    "text": "Within NVivo guidance and training you’ll often see emphasis being placed on considering your project structure, such as:\n\nUse of folders to organise data, nodes, cases, and memos.\nWhich case classifications to create.\nAuto-coding by speaker, style, and/or structure.\n\nWhen first starting with NVivo, it may not always be clear why such importance is placed on these considerations.\nLet’s say you have the following series of questions during your analysis:\n\nHow do I find the cases for all the interview participants?\nHow do I find the cases for interview participants who supported Remain?\nHow do I find what views interview participants who supported Remain had on the Leave campaign?\nHow can I do an initial broad comparison of the views of Remain and Leave campaign supports?",
    "crumbs": [
      "Going Further",
      "**Dynamic Sets & Queries**",
      "Layering Structure"
    ]
  },
  {
    "objectID": "quickexample.html#project-structure",
    "href": "quickexample.html#project-structure",
    "title": "Layering Structure",
    "section": "",
    "text": "Within NVivo guidance and training you’ll often see emphasis being placed on considering your project structure, such as:\n\nUse of folders to organise data, nodes, cases, and memos.\nWhich case classifications to create.\nAuto-coding by speaker, style, and/or structure.\n\nWhen first starting with NVivo, it may not always be clear why such importance is placed on these considerations.\nLet’s say you have the following series of questions during your analysis:\n\nHow do I find the cases for all the interview participants?\nHow do I find the cases for interview participants who supported Remain?\nHow do I find what views interview participants who supported Remain had on the Leave campaign?\nHow can I do an initial broad comparison of the views of Remain and Leave campaign supports?",
    "crumbs": [
      "Going Further",
      "**Dynamic Sets & Queries**",
      "Layering Structure"
    ]
  },
  {
    "objectID": "quickexample.html#interview-participants",
    "href": "quickexample.html#interview-participants",
    "title": "Layering Structure",
    "section": "Interview Participants",
    "text": "Interview Participants\nWithin the project file, all our participant cases are in the Cases &gt; Participants folder. This though includes interview and focus group participant cases.\nThis is a perfect scenario for creating a dynamic set.\n\nBasics of creating a dynamic set\n\nNew Dynamic SetGeneral DetailsSearch Criteria TabAdvanced Tab\n\n\n\n\nIn the left-hand Navigation View, right-click ‘Dynamic Sets’.\nFrom the context menu, click ‘New Dynamic Set…’\n\n\n\n\nProvide an apt ‘Name’ and ‘Description’.\n\n\n\nClick the ‘Search Criteria’ tab, and …\n\n\n\nWithin the Search Criteria view, click the ‘Advanced’ tab!\nIn my opinion, the default, supposedly, ‘Intermediate’ tab is an overwhelming mess. It shows you upfront all the various options that are available, making it difficult to visually parse.\nYou can see it has a series of lines with check boxes of what you want to search for. Consider the ‘Advanced’ tab we are switching to as adding as many of these lines as needed one by one.\n\n\n\n\n\nLook for interview participant cases\nThen for our search criteria, we know two things that distinguishes our interview participants cases:\n\nThe cases code parts of the interview transcripts.\nThe cases are classified within the ‘People’ case classification.\n\n\nLook for1st Criteria2nd CriteriaDone\n\n\nFirst, let’s set the dynamic set to look for cases.\n\nWithin the ‘Advanced’ view:\n\nSelect the drop-down to choose what to ‘Look for’.\nAs we want to find interview participant cases, select ‘Codes & Cases’\n\n\n\nAs our first criteria, let’s add a criteria to return any ‘codes & cases’ that code any of our interview transcripts.\n\n\nWithin the ‘Define more criteria’ section, click the box under ‘Interaction’.\nFrom the drop-down list select ‘Code’.\n\n\n\nClick the box under ‘Option’.\nFrom the drop-down list select ‘That Codes’.\n\n\n\nClick the box under ‘Value’.\nFrom the drop-down list select ‘Selected Items’.\n\nA ‘Select Project Items’ dialogue will pop open.\n\n\nExpand the ‘Files’ folder to see the sub-folders.\nCheck the tick-box for the ‘Interviews (2016)’ sub-folder. This will select all the interview transcripts in the sub-folder.\nHit ‘OK’ to confirm the selection.\n\nA wee example of odd minor frustrations NVivo presents. After selecting our interaction, option, value, and files of interest, the ‘Add to List’ option remains greyed out – but, why?\n\nThere’s a sneaky additional ‘by’ field that can’t be left blank.\n\nClick the box to the right of ‘by’ (and under the box for ‘Select Items’)\nFrom the drop-down list, select ‘Any User’\n\n\n\nClick ‘Add to List’.\n\n\nOur 1st criteria now appears in the giant box for ‘Find items that match all these criteria’.\n\n\nNext, we now\n\n\nClick the box under Interaction.\nSelect ‘Code’ again.\n\n\n\nClick the box under Option.\nSelect ‘Assigned to Classification’.\n\n\n\nClick the box under Value.\nSelect ‘Selected Classifications’.\n\n\n\nWithin the Select Project Items dialogue that pops up, tick the checkbox for ‘People’ case classification.\nHit ‘OK’ to confirm.\n\n\n\nClick ‘Add to List’.\nHit ‘OK’ to save your dynamic list.\n\n\n\n\nAnd there we have it. Our dynamic set (in red) appears in the Navigation Folder similar to a folder and the items meeting our search criteria (in green) are listed in the Display panel.\n\n\n\n\n\nQuick?\nOK, so maybe that did not feel like a ‘quick’ example. However, that is more to do with the number of steps required, it being something new, and weird quirks in NVivo. Once you gain a sense for how to create criteria for dynamic sets they can be created in a minute or less. Importantly, remember these are dynamically updated, you only need to create each once.",
    "crumbs": [
      "Going Further",
      "**Dynamic Sets & Queries**",
      "Layering Structure"
    ]
  },
  {
    "objectID": "quickexample.html#remain-interview-participants",
    "href": "quickexample.html#remain-interview-participants",
    "title": "Layering Structure",
    "section": "Remain Interview Participants",
    "text": "Remain Interview Participants\nSo, our next question was finding all our interview participants who support Remain the EU Referendum. As it is similar steps to follow, a shortened version of the instructions are included below.\n\nNew Dynamic Set2nd Criteria\n\n\n\nCreate a new dynamic set (right-click on ‘Dynamic Sets’ and select ‘New Dynamic Set…’) and provide it relevant Name and Description.\n\nThen in ‘Search Criteria’ tab and ‘Advanced’ sub-tab:\n\nLook for: ‘Codes % Cases’\nInteraction: “Code”\nOption: “That Codes”\nValue: “Select Items” & tick the checkbox next to ‘Interviews (2016)’ in the pop up dialogue.\nBy: “Any User”\nHit “Add to List”\n\n\n\n\nThis time for the 2nd criteria, select ‘Attribute’ for the interaction.\n\nWithin the Select Project Item dialogue that opens:\n\nExpand the People case classification.\nSelect ‘2016 vote’ (the attribute to Remain/Leave in the EU Referendum)\nHit ‘OK’\n\n\nAll that’s left to do:\n\nChange the ‘Value’ we are selecting for to ‘Remain’.\nClick ‘Add to List’.\nHit ‘OK’ to create the Dynamic Set.\n\n\n\n\n\nAnd again our Dynamic Set is shown in red and the results in green.\nAs you can see, once you start getting a sense for how to create search criteria, it becomes relatively quick for creating them – most of the time spent is figuring out how to do it in the first place.",
    "crumbs": [
      "Going Further",
      "**Dynamic Sets & Queries**",
      "Layering Structure"
    ]
  },
  {
    "objectID": "quickexample.html#remain-interview-participants-views-on-the-leave-campaign",
    "href": "quickexample.html#remain-interview-participants-views-on-the-leave-campaign",
    "title": "Layering Structure",
    "section": "Remain Interview Participants Views on the Leave Campaign",
    "text": "Remain Interview Participants Views on the Leave Campaign\nAnother benefit to Dynamic Sets is they can be used when creating other objects, such as Queries. This helps us then towards our third question - what were our interview participants who supported Remain say about the Leave Campaign.\nHere we can combine our “Remain Interview Participants” Dynamic Set and the “LEAVE CAMPAIGN” code.\n(If you missed the Intro workshop, this code and others were created by auto-coding the interview transcripts. This was possible as the transcripts have Headings for each of the main topics covered in the interviews.)\n\nCreate Coding QueryCoding Query Criteria2nd Criteria\n\n\n\nFirst, click ‘Query Criteria’ in the left Navigation View.\n\nWithin the Details list you may see a message explaining what Query criteria are, if so hit ‘Close’.\n\nRight-click anywhere within the white space of the Details list, and:\n\nSelect ‘New Query’\n‘Coding’\n\n\nThis will open a new tab for creating a Coding Query. Similar to when creating Dynamic Sets in the Advanced view, we have ‘Search in’ options to limit our query to specific files, items, or folders (in blue). We also have rows for our search criteria (in green).\n\n\nWe what are our two main criteria?\n\nInterview participants who supported Remain.\nTranscript sections where they speak about the Leave Campaign.\n\n\nTo begin then:\n\nChange ‘All Selected Codes or Cases’ to ‘Any Selected Code or Case’. (We want to find any text in the transcripts coded to any of our remain participants case)\nClick the ‘…’ to open a ‘Select Project Items’ dialogue to select our cases.\n\n\nWithin the ‘Select Project Items’:\n\nTick the checkbox for the ‘Remain Interview Participants’ dynamic set.\nHit ‘OK’\n\nAnd that is it – our first criteria done!\n\nBy default a new Coding Query is set to return ‘All’ (in light blue) coded sections that meet the listed criteria. So, all we need to do now is add another criteria for our ‘LEAVE CAMPAIGN’ code.\n\nClick the ‘+’ at the end of our first criteria to add another criteria below.\nChange the middle box again to ‘Any Selected Code or Case’\nClick the ‘…’ once more for a ‘Select Project Items’ dialogue.\n\n\n\n\nWithin the ‘Select Project Items’ dialogue:\n\nExpand the ‘Codes’ folder.\nSelect the ‘Autocoded (Sections)’ subfolder.\nCheck the tickbox for the ‘LEAVE CAMPAIGN’ node.\nHit ‘OK’ to confirm.\n\n\nNow you can hit Run Query (in pink) to check the query results match what we were expecting and Save Criteria… (in blue) so we can quickly access it again in future. As it is a fairly simple query and fast to run, there is no need to save a separate copy of the results.\n\n\n\n\nView Results\n\nNode ViewsOpen Referenced File\n\n\n\nAfter hitting ‘Run Query’ you’ll be able to see all coded sections that match our Code Query criteria. Just as when viewing regular Codes, there are three tabs on the right-hand side.\n\nSummary - provides a list of the interview transcript files with details for how many ‘References’ there are - in other words, how many coded sections within this transcript met our criteria - and ‘Coverage’ - what percentage of the total transcript is captured by the coded sections meeting our criteria.\n\nReference - is the default view when viewing Code results. It provides a view with all the coded sections, ordered by file they appear in. At the top, in the blue box, you can see it noting that the coded sections that follow are from the Cathy interview transcript, alongside the total references found and coverage. Then it lists each coded section in turn with info for coverage for that individual coded section, in green box.\n\nText - is similar to the ‘Reference’ view, but is like it’s ‘tab view’ equivalent. Rather than showing all the coded sections in a single view, it adds a row along the top for all the files, where clicking to select any listed file (in blue box) will change the main view below to show only the coded sections from it.\n\n\n\nAnd, finally, remember when viewing coded sections, you can right-click on any reference (in blue) and select ‘Open Referenced File’ to open the file the coded section is from.\n\nNVivo will open a new tab for the file, jumping to the specific coded section you had right-click on, and with a Coding Query will also highlight other coded sections from it in the file.",
    "crumbs": [
      "Going Further",
      "**Dynamic Sets & Queries**",
      "Layering Structure"
    ]
  },
  {
    "objectID": "quickexample.html#comparing-leave-and-remain-supporters",
    "href": "quickexample.html#comparing-leave-and-remain-supporters",
    "title": "Layering Structure",
    "section": "Comparing Leave and Remain Supporters",
    "text": "Comparing Leave and Remain Supporters\nOur final intial question was making an inital broad comparison between the views of Leave and Remain supporters.\nWe can achieve this with a Matrix Coding Query combining our interview transcript autocoding with are People case classification attribute values.\n\nMatrix Coding QueryAdding RowsAdding ColumnsViewing Results\n\n\n\nWithin the Query Criteria, right-click in the white space and -\n\nSelect ‘New Query’\nThen ‘Matrix Coding Query’\n\n\nThis will open a new tab for creating a Matrix Coding Query. We can see some of the familar elements again. In yellow we have the optiosn for searching across all Files & Externals or specific Items and Folders. In blue, we have the default ‘And’ for handling criteria - other options include Or, Not, and Near. What is different though is rather than adding 1+ criteria, we have a box for selecting Rows and another for Columns, in red.\n\n\nIt is possible to drag and drop items into the boxes for Rows and Columns, but it is often far quicker and more convenient to use the ‘Select Project Items’ dialogue.\n\n\nClick the ‘+’ underneath the Rows box on the left.\nFrom the two options click ‘Select Items…’\n\n\nThen within the Select Project Items dialogue:\n\nExpand the Codes folder.\nCheck the tickbox for the ‘Autocoded (Sections)’ sub-folder.\nHit ‘OK’.\n\n\n\nWe can follow the same process to select our columns.\n\n\nClick the ‘+’ underneath the Columns box.\nFrom the two options click ‘Select Items…’\n\nWhilst ‘Select Attribute Values..’ is an option, that is for selecting individual values with criteria (equals, does not equal) one by one. For our purposes, ‘Select Items…’ remains more convenient.\n\n\nSelect the ‘Case Classifications’ folder.\nExpand the ‘People’ case classification.\nExpand the ‘2016 vote’ attribute.\n\n\nAfter scrolling down a bit:\n\nCheck the box for ‘Leave’ attribute value.\nCheck the box for ‘Remain’ attribute value.\nHit ‘OK’.\n\n\n\n\nAfter selecting our Rows and Columns, we can hit ‘Run Query’ (in pink) to create our Coding Matrix. Remember if you want to be able to quickly re-run and update the Coding Matrix to also hit ‘Save Criteria…’ (in green) and give it a suitable name.\nThe Coding Matrix itself (in blue) for each cell in the table shows how many coded sections intersect the two. So, the cell highlight (in yellow) is telling us that 15 sections coded ‘VOTING DECISION’ were also coded to cases, where the participant the case is for supported Leave (both in red).\n\nThat may not seem all that impressive at first. The real power of Coding Matrices though come from double-clicking any of the cells.\nThat will open a new tab showing all the coded sections being counted in that cell. So, for our example, it opens a tab showing all sections coded ‘VOTING DECISION’ AND also coded to a case where the participant supported Leave.\nThis makes a Coding Matrix the equivalent of a table of shortcuts to more specific queries. Since you can create them with classification attributes, it also makes them ideal for creating queries to aid comparison.",
    "crumbs": [
      "Going Further",
      "**Dynamic Sets & Queries**",
      "Layering Structure"
    ]
  },
  {
    "objectID": "quickexample.html#summary",
    "href": "quickexample.html#summary",
    "title": "Layering Structure",
    "section": "Summary",
    "text": "Summary\nThese examples show different ways you can iteratively build upon your project structure as your analysis progresses.\n\nYour initial structure (folders, codes, cases) can be used to create dynamic sets or query for specific coded sections.\nIt is possible to add layers upon layers. A dynamic set can be used as part of a query - saving you having to repeat the specific criteria for it again and again.\n\nIt can be useful then, in addition to considering your ‘foundational’ structure to think about which dynamic sets can add a supporting additional layer to make other tasks easier in the long-term.\nIt can feel slow and clunky at first getting to grips with creating them, but as you create more your pace will quicken, and through combining them with queries start to more intuitively combine NVivo features in relation to questions that arise during analysis.\n\n\n\n\n\n\n\nDon’t panic!\n\n\n\nIt is not a problem if you have already started your analysis and not added some of the ways to structure a project file covered in this session.\n\nMost - such as auto-coding and creating folders - can be created at any stage.\nNot every project and analysis needs to use all of these structuring options. Some options also add equivalent structure in different ways, where there is some ‘aesthetic choice’ in which to use.\nIf your transcripts do not make use of headers to structure the main topics covered, you can still do manual ‘broad-brush’ coding. (If having this topic-level coding would benefit your analysis!)\n\nImportantly, for some project structure decisions there is no 100% right/wrong way to do it.\nIn the example covered we had a ‘Participants’ case folder, containing the cases for all participants, and used a dynamic set to get ‘Interview Participants’.\nAnother project structure may have case folders for ‘Interview participants’ and ‘Focus Group participants, and use a dynamic set to get ’All Participants’.\nNote, this would be feasible as long as the interview and focus group participants are two distinct groups. If some participants took part in both interviews and focus groups, then it would not be possible to have separate Cases folders for them, and the project would need to be structured similar to this example.",
    "crumbs": [
      "Going Further",
      "**Dynamic Sets & Queries**",
      "Layering Structure"
    ]
  },
  {
    "objectID": "orgnodes.html#adding-organisation-nodes",
    "href": "orgnodes.html#adding-organisation-nodes",
    "title": "Organisation Nodes",
    "section": "Adding Organisation Nodes",
    "text": "Adding Organisation Nodes\n\nTest 1Test 2\n\n\nImage goes here\n\n\nAnother image goes here\n\n\n\n\nCode Matrix Query",
    "crumbs": [
      "Going Further",
      "**Coding Workflows**",
      "Organisation Nodes"
    ]
  },
  {
    "objectID": "orgnodes.html#memo-links",
    "href": "orgnodes.html#memo-links",
    "title": "Organisation Nodes",
    "section": "Memo Links",
    "text": "Memo Links\n\nAutocode Memos",
    "crumbs": [
      "Going Further",
      "**Coding Workflows**",
      "Organisation Nodes"
    ]
  },
  {
    "objectID": "orgnodes.html#static-sets",
    "href": "orgnodes.html#static-sets",
    "title": "Organisation Nodes",
    "section": "Static Sets",
    "text": "Static Sets\n\nCoded to Old Codes, but not New Codes",
    "crumbs": [
      "Going Further",
      "**Coding Workflows**",
      "Organisation Nodes"
    ]
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "If you are new to qualitative enquiry, please see the Primers page for recommended introduction materials."
  },
  {
    "objectID": "resources.html#lumiveros-nvivo-resources",
    "href": "resources.html#lumiveros-nvivo-resources",
    "title": "Resources",
    "section": "Lumivero’s NVivo Resources",
    "text": "Lumivero’s NVivo Resources\n\nUser Help Pages\nBelow are links to Lumivero’s NVivo User Help pages for the more recent Windows and MacOS versions of NVivo.\nWindows:\n\nNVivo 12\nNVivo Release 1\nNVivo 14\n\nMacOS:\n\nNVivo 12\nNVivo Release 1\nNVivo 14\n\n\n\nOther online Lumivero resources\n\nNVivo YouTube Channel\nNVivo Podcast series\nLumivero Webinars and Events (for payment, some webinars are free)\nNVivo Knowledge Base\nNVivo Customer Hub (requires Lumivero username and password to log in)"
  },
  {
    "objectID": "resources.html#recommended-reading",
    "href": "resources.html#recommended-reading",
    "title": "Resources",
    "section": "Recommended Reading",
    "text": "Recommended Reading\n\nQualitative Analysis Software\nThe best texts on using software for qualitative analysis:\n\nJackson, Kristi, and Pat Bazeley. (2019) Qualitative Data Analysis with NVivo. 3rd ed. Thousand Oaks, CA: SAGE Publications Ltd.\n\nPDF for Chapter 1 - ‘Where to begin?’\nClick by click instructions accompanying the book.\n\nBazeley, Pat. (2017) ‘Using Qualitative Data Analysis Software (QDAS) to Assist Data Analyses’. Pp. 1–18 in Handbook of Research Methods in Health Social Sciences, edited by P. Liamputtong. Singapore: Springer.\n\nOpen access copy.\n\n\n\n\nQualitative Analysis\nAlso useful as a basis for understanding qualitative analysis, coding, and writing up more generally:\n\nBazeley, Pat. 2020. Qualitative Data Analysis: Practical Strategies. 2nd ed. London: SAGE Pubications.\n\nHard-copies available in most university libraries.\n\nSaldaña, Johnny. (2013) The Coding Manual for Qualitative Researchers. 2nd ed. London: Sage Publications Ltd.\n\nAn Introduction to Codes and Coding PDF of Chapter 1.\n\n\n\n\nNVivo Examples\n\nByrne, David. (2022) ‘A Worked Example of Braun and Clarke’s Approach to Reflexive Thematic Analysis’. Quality & Quantity 56(3):1391–1412. doi: 10.1007/s11135-021-01182-y.\nHutchison, Andrew John, Lynne Halley Johnston, and Jeff David Breckon. (2010) ‘Using QSR‐NVivo to Facilitate the Development of a Grounded Theory Project: An Account of a Worked Example’. International Journal of Social Research Methodology 13(4):283–302. doi: 10.1080/13645570902996301."
  },
  {
    "objectID": "going-further-slides.html",
    "href": "going-further-slides.html",
    "title": "Going Further - Slides",
    "section": "",
    "text": "TODO\n\n\n\n\nEmbed copy of slides\nAdd download link\n\n\n\nBelow is an embedded copy of the slides:\n[embed here]\nClick here[add link] to download a copy of the slides.",
    "crumbs": [
      "Going Further",
      "Slides"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome!",
    "section": "",
    "text": "Session Brief\n\n\n\nThis one-day in-person workshop is designed for those with a basic working knowledge of NVivo for qualitative research projects. It is designed to introduce you to more advanced features and the flexible ways these can be used for qualitative analysis. It is designed as a follow-on from the “Introduction to Qualitative Analysis Projects in NVivo”, but is open to everyone regardless of whether they attended that session.\nStudents will learn how to use some more advanced features of NVivo:\n\ncoding workflows, tip and tricks\nusing static and dynamic sets\ndifferent types of queries\nframework matrices\n\nWe will use some curated open access qualitative data (the Qualitative Election Study of Britain). However, there is an opportunity to discuss how to use NVivo to manage your own project.",
    "crumbs": [
      "Going Further",
      "Welcome!"
    ]
  },
  {
    "objectID": "index.html#session-aims",
    "href": "index.html#session-aims",
    "title": "Welcome!",
    "section": "Session Aims",
    "text": "Session Aims\n\n🧑‍🎓 NVivo 201 - Additive Analysis\nThis workshop covers intermediate-advanced topics in using NVivo for qualitative data analysis. Key to how the more advanced features are introduced is through considering them as flexible tools for ‘additive analysis’. They add to the ‘foundational’ elements of your project – your files, folders, nodes, cases, and notes – providing ways to retrieve, review, and recontextualise data based on the aims of your analysis. They are part of the extended toolset for crafting various ways to organise, navigate, layer, and weave your analysis and data.\nIt is assumed, therefore, that you have pre-requisite knowledge in how to create and set up an NVivo project file, including importing data, auto-coding by speaker / structure, creating nodes and cases, and doing basic coding.\nA Project File though is provided with these already set up, and the follow along demonstrations will give a partial refresher on some of these. We can also use the experiment and discussion sections to do a short review of any of them.\n\n\n🤔 Problem-based approach\nThe sections and tasks for this workshop session are based around problems and considerations to make that you might encounter as your analysis progresses.\nWith each we will cover some conceptual points and a follow along demonstration that combines various NVivo features together to achieve an analysis aim.\nThe purpose of this is to explain features in context, the how and why you would want to use them, rather than just providing an abstract technical explanation of what they do.\nImportantly, after the follow along demonstrations, we will have time for experimentation and discussion. I have tried to identify common enough problems and considerations that will be encountered across different types of project. However, all the steps and features covered can be combined and deployed in a multitude of ways. Please use the ‘experiment and discuss’ sections to raise any questions about how what we are covering could be applied to your project or recombined for other analysis aims.\n\n\n\n\n\n\n‘Living Documents’\n\n\n\nThese pages are ‘living documents’, they will continually and iteratively be updated over time. Please see the Callout on the About page\n\n\n\n\n🧟 Slaying QDAS zombies\nTo say some qualitative researchers were initially resistant to qualitative data analysis software is an understatement. Early literature on the value of computing to qualitative analysis was filled with acerbic critiques, seeing software as undermining the rich in-depth analysis that qualitative analysis offers.\nThere was a partial truth to these criticisms as the nascent software was minimal in features and capabilities. What some critiques got wrong - or, at least, gave the impression of - though, was taking the limitations of the software as it was and treating these as inherent and inescapable.\nThe big four critiques - that software distances researchers from data by placing a barrier between them, strips qualitative methods of its diversity by homogenising coding and analysis, replaces the creativity of qualitative analysis with mechnical steps, and dehumanises participants by decontextualising their experiences - are not unavoidable dangers with modern software.\nHowever, the critiques unfortunately still persist as QDAS Zombies by being recounted again and again in the literature reviews of journal articles and books. That QDAS software is not overly friendly to new users - see below - unfortunately also keeps the zombie critiques going. When users struggle so much with the software that they find themselves turning to paper and pen – or copying chunks of text into Word/Excel files – it’s no wonder these critiques feel more alive than dead.\nWhat we will cover in this workshop should go towards dispelling that feeling by demystifying the features that help solve common problems and analysis aims beyond the basics. I’d go as far as arguing that once you gain a greater understanding and confidence in using contemporary qualitative analysis software, the zombie critiques are a greater risk when using paper and pen.\n\n\n🤢 It’s not you, it’s NVivo!\nNVivo is powerful and without a doubt better than analogue paper and pen analysis – or worse, copying and pasting chunks of text into multiple Word/Excel files – but it remains far from perfect. It is needlessly bloated and clunky, and historically had a reputation for regularly crashing.\nThe unintuitive design and labyrinthine steps required for some tasks – never mind the joys of trying to recall them each time when first starting – gives the false impression that it is all overly-complex. It might not seem it now, but with perseverance the pieces start fitting together, and the initial overwhelm will dissipate into mild frustrations.\nTo Lumivero’s credit, the rate at which NVivo crashes has vastly reduced and is no longer a daily occurrence. However, it can still throw up the occasional unexpected error, freeze and lock-up, or decide to crash and die completely. This is most often ‘NVivo-error’ not ‘user-error’ – there was not anything wrong in how you set up your project or actions you were doing, it’s just NVivo being NVivo.",
    "crumbs": [
      "Going Further",
      "Welcome!"
    ]
  },
  {
    "objectID": "buildingthemes.html#framework-matrices",
    "href": "buildingthemes.html#framework-matrices",
    "title": "Building Themes",
    "section": "Framework Matrices",
    "text": "Framework Matrices\n\nCreating a Framework Matrix\n\n\nViewing a Framework Matrix"
  },
  {
    "objectID": "buildingthemes.html#reusable-cells",
    "href": "buildingthemes.html#reusable-cells",
    "title": "Building Themes",
    "section": "Reusable Cells",
    "text": "Reusable Cells"
  },
  {
    "objectID": "project-file.html",
    "href": "project-file.html",
    "title": "Project File",
    "section": "",
    "text": "An NVivo project file for this workshop is available to download from the ‘NVivo Training 2024/25’ group on Social.",
    "crumbs": [
      "Going Further",
      "Project File"
    ]
  },
  {
    "objectID": "project-file.html#the-data-set",
    "href": "project-file.html#the-data-set",
    "title": "Project File",
    "section": "The Data Set",
    "text": "The Data Set\nThe NVivo project file uses data from focus groups and interviews conducted in 2015 and 2016 as part of the Qualitative Election Study of Britain.\n\nThe QESB is a collaborative effort between researchers from the UWE Bristol, the University of Dundee, and GESIS in Germany. Since our launch in 2010, our aim has been to learn about the thoughts, feelings, and opinions of every day voters, before and after the UK general election. To this end, we hold focus groups and interviews, online and in-person. During this general election period, we want to hear your thoughts on political life in the UK. Whether it’s about the election, political leaders, parties, economic concerns, the NHS, or climate change, we want to hear it all.\n\nThe data is open access and available from the UK Data Service.\nFor more information on open research and data: - The FAIR principles to improve the findability, accessibility, interoperability, and reuse of digital assets. - UK Data Service hub for archiving qualitative data and secondary analysis. - UK Data Service hub for data skills modules, covering research data management, data for reuse, and more.\nImportant to making data open access is storing it in ‘interoperable’, and ideally ‘open standard’, formats. Interoperable means that the files are not restricted to being opened by a specific single application. An open standard is one that is available for anyone to use, share, or access.\nFull ‘open research’ remains limited within qualitative research for various reasons. Importantly, whilst there is an open QDPX format for sharing qualitative data analysis projects, it is a ‘lossy’ format – where folder structures and more are lost when exporting to the open format.\nIn order then to avoid losing time creating an NVivo project file from scratch / tidying up an imported QDPX file, an NVivo project file has been set up for the workshop and available from Social. This project file is similar to what you would have had at the end of the Intro to NVivo workshop with a few minor tweaks.",
    "crumbs": [
      "Going Further",
      "Project File"
    ]
  },
  {
    "objectID": "project-file.html#downloading-the-nvivo-project-file",
    "href": "project-file.html#downloading-the-nvivo-project-file",
    "title": "Project File",
    "section": "Downloading the NVivo Project File",
    "text": "Downloading the NVivo Project File\nFrom the group page, to access the file:\n\nDownload linkZip file\n\n\n\nClick ‘Feed’ in the group navigation bar.\n\nScroll down the Feed to find my post with the OneDrive link and click it.\n\nA new tab should open with a button to click to ‘Download’ the file.\n\n\n\n\n\n\nFail-safe\n\n\n\nIn case the download link is not working (my university seems to randomly stop share links from working), there is a zip file containing the NVivo project file on Social as well. Use the next tab for instructions to download and extract the zip file.\n\n\n\n\n\nClick ‘Documents’ in the group navigation bar.\n\nSelect the ‘Going Further (Feb 2025)’ folder.\n\n\nClick the three dots to open the pop-up menu.\nClick ‘Download’ and choose a suitable location to save the file on your device.\n\n\n\nFrom the folder you downloaded it to, right-click on the zip file.\nSelect ‘Extract All…’\n\n\n\nClick ‘Extract’ from the dialogue window and a new folder will be created containing the NVivo project file.",
    "crumbs": [
      "Going Further",
      "Project File"
    ]
  },
  {
    "objectID": "project-file.html#convertingupgrading-the-project",
    "href": "project-file.html#convertingupgrading-the-project",
    "title": "Project File",
    "section": "Converting/Upgrading the Project",
    "text": "Converting/Upgrading the Project\nNVivo project files are ‘forwards’ but not ‘backwards’ compatible. This means that newer versions of NVivo can open project files created in older versions, but not vice versa.\nDue to that, the project file provided was created in NVivo 12, which was the oldest version attendees said they were using in the sign-up survey.\nIf you are using NVivo 12, you can open the file and directly start working in it.\nIf you are using a newer version of NVivo or NVivo for MacOS, you will be greeted by a screen asking you to convert/upgrade the file:\n\nUpgrade\n\n\n\n\n(Optional) click ‘Browse…’ to choose location to save and rename the project file.\nClick ‘Next’.\n\n\n\nFrom the next screen, hit ‘Upgrade’ to confirm and start the upgrade. Once complete NVivo will open the file automatically.\n\n\n\n\n\n\n\n\n\n\nNVivo Version Differences\n\n\n\nOn Windows, there are not any overly significant changes in features from NVivo 12 onwards. The main changes are cosmetic, menu options, and naming conventions.\nNVivo for MacOS has always had a different look and menu options. It now has most of the same main features, though a few sub-features remain absent.\nWe’ll cover some of these differences as we go. The Resources page also has links to the NVivo User Help Pages for different versions.",
    "crumbs": [
      "Going Further",
      "Project File"
    ]
  },
  {
    "objectID": "project-file.html#project-file-overview",
    "href": "project-file.html#project-file-overview",
    "title": "Project File",
    "section": "Project File Overview",
    "text": "Project File Overview\nAs a (very) quick overview of the project file:\n\nFilesCodesCasesNotesSetsQueries\n\n\nData &gt; Files\n\n\nFocus Groups (2015): Transcripts from three pre-general election focus groups from 2015.\nInterviews (2016): Fourteen telephone interviews on the EU Referendum in 2016.\nLiterature: Containing two articles by QESB team members, one on using grounded theory, the other on using focus groups.\nProject Files: With files that contain additional information about the project, the research phases, and participants who took part.\n\n\n\nCoding &gt; Codes\n\n\nCodes: Top-level folder with some initial coding created during the Intro to NVivo workshop.\n\nAutocoded (Sections): Sub-folder with the broad-brush themes that were created auto-coding the Headings within the interview transcripts.\nAutocoded (Themes): Sub-folder with codes created by auto-coding ‘themes’.\n\n\n\n\n\n\n\n\nWarning\n\n\n\nWe have “autocoded themes” within this document merely to provide a broad range of example codes to work with in the exercises. However, in practice, do not rely on such autocoding instead of creating and coding with your own codes.\n\n\n\n\nCases &gt; Cases\n\n\nInterviewer: Cases created when ‘autocoding by speaker’ that code transcript sections where an interviewer / moderator from the research team is speaking.\nParticipants: Cases created when ‘autocoding by speaker’ that code transcript sections where participants are speaking.\nCase Classifications: Top-level folder contains the case classifications and their attributes. For this project, there is only one case classification - ‘People’.\n\nPeople: Sub-folder with all cases classified as ‘People’, where can see the attributes for specific participants. (Note - the interviewer cases are also classified as people, in many cases you would want to remove from the same classification as participants.)\n\n\n\n\n\n\nMemos: NVivo’s built-in note-taking system. Contains a few existing memos with further project info and reflectives on initial analysis.\nFramework Matrices: Create summaries for cases by node. Currently, empty.\nAnnotations: Annotations added to files, with couple examples.\nSee-Also Links: Use to link content/files to other content/files. Currently, empty.\n\n\n\n\n\nStatic Sets: Manually created collections of project items, of any type. Think of this as a way to group and organise items for specific tasks without changing their primary structure. For example, a code can only exist within a single folder within the “Coding &gt; Codes” section. However, it can be included within an unlimited number of static sets.\nDynamic Sets: Collections of project items created based on search criteria. As they are criteria based they also auto-update based on any changes in your project. For example, if you had a dynamic set for all codes used to code focus group transcripts, each time you use a new code when coding the focus groups, it will automatically then be included in the dynamic set.\n\n\n\n\n\n\n\nNVivo 12 - ‘search folders’\n\n\n\nDynamic Sets are a new name given to what were called ‘search folders’ in NVivo 12. They operate exactly the same, all that is different is the name.\n\n\n\n\n\n\nQuery Criteria: Location to store saved queries, saving you from having to manually put them together each time.\nQuery Results: Location to store query results. This can be useful for more complex queries that take a long-time to process to save having to re-run it every time – just remember it won’t reflect any changes to your project file. Query results can also be used to create new nodes and cases.\nCoding Matrices: Similar to the above but for the results of a coding matrix. By default manually created coding matrices saved results with be in Query Results, but they can manually moved across. Coding matrices automatically produced, such as when autocoding by theme, are stored here by default.",
    "crumbs": [
      "Going Further",
      "Project File"
    ]
  }
]